import { COLOR } from "./color.config";

export const FUNCTION_SIGNATURES_CONFIG = {
  abs: {
    returns: true,
    full: ["x"],
    colour: COLOR.MATH,
  },
  all: { returns: true, colour: COLOR.LOGIC },
  any: { returns: true, colour: COLOR.LOGIC },
  ascii: { returns: true, colour: COLOR.TEXT },
  bin: { returns: true, colour: COLOR.MATH },
  bool: {
    returns: true,
    colour: COLOR.LOGIC,
    simple: ["x"],
  },
  breakpoint: {
    returns: false,
    colour: COLOR.PYTHON,
  },
  bytearray: { returns: true, colour: COLOR.TEXT },
  bytes: { returns: true, colour: COLOR.TEXT },
  callable: { returns: true, colour: COLOR.LOGIC },
  chr: { returns: true, colour: COLOR.TEXT },
  classmethod: { returns: true, colour: COLOR.OO },
  compile: { returns: false, colour: COLOR.PYTHON },
  complex: { returns: true, colour: COLOR.MATH },
  delattr: {
    returns: false,
    colour: COLOR.VARIABLES,
  },
  dict: { returns: true, colour: COLOR.DICTIONARY },
  dir: { returns: true, colour: COLOR.PYTHON },
  divmod: { returns: true, colour: COLOR.MATH },
  enumerate: {
    returns: true,
    colour: COLOR.SEQUENCES,
  },
  eval: { returns: true, colour: COLOR.PYTHON },
  exec: { returns: false, colour: COLOR.PYTHON },
  filter: { returns: true, colour: COLOR.SEQUENCES },
  float: {
    returns: true,
    colour: COLOR.MATH,
    simple: ["x"],
  },
  format: { returns: true, colour: COLOR.TEXT },
  frozenset: {
    returns: true,
    colour: COLOR.SEQUENCES,
  },
  getattr: { returns: true, colour: COLOR.OO },
  globals: { returns: true, colour: COLOR.VARIABLES },
  hasattr: { returns: true, colour: COLOR.OO },
  hash: { returns: true, colour: COLOR.MATH },
  help: { returns: true, colour: COLOR.PYTHON },
  hex: { returns: true, colour: COLOR.MATH },
  id: { returns: true, colour: COLOR.PYTHON },
  // Image: { custom: ast_Image },
  input: {
    returns: true,
    colour: COLOR.FILE,
    simple: ["prompt"],
  },
  int: {
    returns: true,
    colour: COLOR.MATH,
    simple: ["x"],
  },
  isinstance: { returns: true, colour: COLOR.LOGIC },
  issubclass: { returns: true, colour: COLOR.LOGIC },
  iter: { returns: true, colour: COLOR.SEQUENCES },
  len: { returns: true, colour: COLOR.SEQUENCES },
  list: { returns: true, colour: COLOR.LIST },
  locals: { returns: true, colour: COLOR.VARIABLES },
  map: { returns: true, colour: COLOR.SEQUENCES },
  max: { returns: true, colour: COLOR.MATH },
  memoryview: { returns: true, colour: COLOR.PYTHON },
  min: { returns: true, colour: COLOR.MATH },
  next: { returns: true, colour: COLOR.SEQUENCES },
  object: { returns: true, colour: COLOR.OO },
  oct: { returns: true, colour: COLOR.MATH },
  open: { returns: true, colour: COLOR.FILE },
  ord: { returns: true, colour: COLOR.TEXT },
  pow: { returns: true, colour: COLOR.MATH },
  print: {
    returns: false,
    colour: COLOR.FILE,
    simple: ["message"],
    full: ["*messages", "sep", "end", "file", "flush"],
  },
  property: { returns: true, colour: COLOR.OO },
  range: {
    returns: true,
    colour: COLOR.SEQUENCES,
    simple: ["stop"],
    full: ["start", "stop", "step"],
  },
  repr: { returns: true, colour: COLOR.TEXT },
  reversed: {
    returns: true,
    colour: COLOR.SEQUENCES,
  },
  round: {
    returns: true,
    colour: COLOR.MATH,
    full: ["x", "ndigits"],
    simple: ["x"],
  },
  set: { returns: true, colour: COLOR.SET },
  setattr: {
    returns: false,
    full: ["object", "name", "value"],
    colour: COLOR.OO,
  },
  slice: { returns: true, colour: COLOR.SEQUENCES },
  sorted: {
    full: ["iterable", "*", "**key", "**reverse"],
    simple: ["iterable"],
    returns: true,
    colour: COLOR.SEQUENCES,
  },
  staticmethod: { returns: true, colour: COLOR.OO },
  str: {
    returns: true,
    colour: COLOR.TEXT,
    simple: ["x"],
  },
  sum: { returns: true, colour: COLOR.MATH },
  super: { returns: true, colour: COLOR.OO },
  tuple: { returns: true, colour: COLOR.TUPLE },
  type: { returns: true, colour: COLOR.OO },
  vars: { returns: true, colour: COLOR.VARIABLES },
  zip: { returns: true, colour: COLOR.SEQUENCES },
  __import__: {
    returns: false,
    colour: COLOR.PYTHON,
  },
};
